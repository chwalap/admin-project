version: "3.2"

services:
  mosquitto:
    image: mosquitto
    hostname: mosquitto
    container_name: mosquitto
    build:
      context: .
      dockerfile: ./mosquitto/Dockerfile
      cache_from:
        - eclipse-mosquitto:latest
    volumes:
      - ./scripts:/scripts
      - ./configs:/configs
    ports:
      - "1883:1883"
    expose:
      - "1883"
    restart: unless-stopped

  weather-service:
    image: eclipse-mosquitto:latest
    hostname: weather-service
    container_name: weather-service
    build:
      context: .
      dockerfile: ./weather-service/Dockerfile
      cache_from:
        - eclipse-mosquitto:latest
    volumes:
      - ./scripts:/scripts
      - ./configs:/configs
    depends_on:
      - mosquitto
    restart: unless-stopped
    command: "bash -c ' \
      echo Waiting for Mosquitto && /scripts/wait-for-socket.sh mosquitto 1883 && \
      /scripts/temp.sh | /usr/bin/mosquitto_pub -h mosquitto -p 1883 -t temperature -c -l'"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - ./data/zookeeper:/data
      - ./logs/zookeeper:/datalog
      - ./scripts:/scripts
      - ./configs:/configs
    restart: unless-stopped

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
    volumes:
      - ./data:/var/lib/kafka/
      - ./scripts:/scripts
      - ./configs:/configs
    depends_on:
      - zookeeper
    restart: unless-stopped
    command: "bash -c ' \
      echo Waiting for Zookeeper && /scripts/wait-for-socket.sh zookeeper 2181 && \
      echo Waiting for Mosquitto && /scripts/wait-for-socket.sh mosquitto 1883 && \
      /etc/confluent/docker/run'"

  kafka-mqtt:
    image: confluentinc/cp-kafka-connect:latest
    hostname: kafka-mqtt
    container_name: kafka-mqtt
    ports:
      - "8083:8083"
    volumes:
      - ./connectors/jars:/etc/kafka-connect/jars
      - ./scripts:/scripts
      - ./configs:/configs
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_GROUP_ID: mqtt-connect-group
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-mqtt
      CONNECT_CONFIG_STORAGE_TOPIC: mqtt-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: mqtt-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: mqtt-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_PARTITIONS: 1
      CONNECT_STATUS_STORAGE_PARTITIONS: 1
    depends_on:
      - zookeeper
      - kafka
    restart: unless-stopped
    command: "bash -c ' \
      echo Waiting for Kafka && /scripts/wait-for-socket.sh kafka 9092 && \
      /etc/confluent/docker/run'"

  kafka-mongodb:
    image: confluentinc/cp-kafka-connect:latest
    hostname: kafka-mongodb
    container_name: kafka-mongodb
    ports:
      - "8084:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:9092"
      CONNECT_GROUP_ID: mongodb-connect-group
      CONNECT_REST_ADVERTISED_HOST_NAME: mongodb-mqtt
      CONNECT_CONFIG_STORAGE_TOPIC: mongodb-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: mongodb-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: mongodb-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_PARTITIONS: 1
      CONNECT_STATUS_STORAGE_PARTITIONS: 1
    depends_on:
      - zookeeper
      - kafka
    volumes:
      - ./connectors/jars:/etc/kafka-connect/jars
      - ./scripts:/scripts
      - ./configs:/configs
    restart: unless-stopped
    command: "bash -c ' \
      echo Waiting for Kafka && /scripts/wait-for-socket.sh kafka 9092 && \
      /etc/confluent/docker/run'"

  kafka-walking-average:
    image: kafka-walking-average
    hostname: kafka-walking-average
    container_name: kafka-walking-average
    build:
      context: .
      dockerfile: ./kafka-streams/Dockerfile
    restart: unless-stopped
    depends_on:
      - kafka-mqtt
    volumes:
      - ./scripts:/scripts
      - ./configs:/configs
    command: "bash -c ' \
      echo Waiting for Kafka && /scripts/wait-for-socket.sh kafka 9092 && \
      java -cp /app/walkingaverage-1.0.jar com.walkingaverage.WalkingAverage'"

  mongo-db:
    image: mongo:latest
    hostname: mongo-db
    container_name: mongo-db
    ports:
      - "27017:27017"
    expose:
      - "27017"
    volumes:
      - ./data/mongo-db:/data
    restart: unless-stopped
    command: --bind_ip_all

  mongo-client:
    image: mongoclient/mongoclient
    hostname: mongo-client
    container_name: mongo-client
    ports:
      - 3000:3000
    expose:
      - "3000"
    environment:
      MONGO_URL: "mongodb://mongo-db:27017"
      PORT: 3000
    depends_on:
      - mongo-db
    restart: unless-stopped

  system-setup:
    image: system-setup
    hostname: system-setup
    container_name: system-setup
    build:
      context: .
      dockerfile: ./system-setup/Dockerfile
    command: "bash -c ' \
      echo Waiting for Kafka Connector MQTT && /scripts/wait-for-socket.sh kafka-mqtt 8083 && \
      echo Waiting for Kafka Connector MongoDB && /scripts/wait-for-socket.sh kafka-mongodb 8083 && \
      curl -s -d @/configs/mqtt.json -H \"Content-Type: application/json\" -X POST http://kafka-mqtt:8083/connectors && \
      curl -s -d @/configs/mongodb.json -H \"Content-Type: application/json\" -X POST http://kafka-mongodb:8083/connectors'"
    volumes:
      - ./scripts:/scripts
      - ./configs:/configs
    depends_on:
      - kafka-mqtt
      - kafka-mongodb
