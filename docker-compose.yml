version: '3.3'

services:
  mosquitto:
    image: mosquitto
    hostname: mosquitto
    container_name: mosquitto
    restart: unless-stopped
    ports:
      - "1883:1883"
    expose:
      - "1883"
    build:
      context: .
      dockerfile: ./mosquitto/Dockerfile

  weather_service:
    image: weather_service
    hostname: weather_service
    container_name: weather_service
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./weather_service/Dockerfile

  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    container_name: zookeeper
    restart: unless-stopped
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./data/zookeeper:/data
      - ./logs/zookeeper:/datalog

  kafka:
    image: kafka
    hostname: kafka
    container_name: kafka
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./kafka/Dockerfile
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_SENSOR_INT:PLAINTEXT,LISTENER_SENSOR:PLAINTEXT
      KAFKA_LISTENERS: LISTENER_SENSOR_INT://kafka:9092,LISTENER_SENSOR://localhost:29092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_SENSOR_INT://kafka:9092,LISTENER_SENSOR://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_SENSOR_INT
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./data/kafka:/var/lib/kafka/data
    depends_on:
      - zookeeper

  kafka-connect-mqtt:
    image: kafka-connect
    hostname: kafka-connect-mqtt
    container_name: kafka-connect-mqtt
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./kafka_connect/Dockerfile
    environment:
      CONFIG: /kafka/mqtt.properties
    ports:
      - "8083:8083"
    volumes:
      - ./connectors/jars:/etc/kafka-connect/jars
    depends_on:
      - zookeeper
      - kafka
      - mosquitto

  kafka-connect-mongodb:
    image: kafka-connect
    hostname: kafka-connect-mongodb
    container_name: kafka-connect-mongodb
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./kafka_connect/Dockerfile
    environment:
        CONFIG: /kafka/mongodb.properties
    volumes:
      - ./connectors/jars:/etc/kafka-connect/jars
    depends_on:
      - zookeeper
      - kafka
      - mosquitto
      - mongo-client
      - mongo-db

  mongo-db:
    image: mongo:4.0.5
    hostname: mongo-db
    container_name: mongo-db
    restart: unless-stopped
    ports:
      - "27017:27017"
    expose:
      - "27017"
    command: --bind_ip_all --smallfiles
    volumes:
      - ./data/mongo-db:/data

  mongo-client:
    image: mongoclient/mongoclient:2.2.0
    hostname: mongo-client
    container_name: mongo-client
    restart: unless-stopped
    depends_on:
      - mongo-db
    ports:
      - 3000:3000
    expose:
      - "3000"
    environment:
      MONGO_URL: "mongodb://mongo-db:27017"
      PORT: 3000
